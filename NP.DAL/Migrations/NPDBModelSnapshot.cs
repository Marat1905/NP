// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NP.DAL.Context;

#nullable disable

namespace NP.DAL.Migrations
{
    [DbContext(typeof(NPDB))]
    partial class NPDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("NP.DAL.Entityes.BreakDbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ActualPaperMoisture")
                        .HasColumnType("REAL");

                    b.Property<double>("ActualPaperWeight")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("EndBreak")
                        .HasColumnType("TEXT");

                    b.Property<double>("ReleerSpeed")
                        .HasColumnType("REAL");

                    b.Property<double>("SetpointPaperMoisture")
                        .HasColumnType("REAL");

                    b.Property<double>("SetpointPaperWeight")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartBreak")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("TimeBreak")
                        .HasColumnType("TEXT");

                    b.Property<double>("WireSpeed")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("BreaksTable");
                });
#pragma warning restore 612, 618
        }
    }
}
